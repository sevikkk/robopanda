cx_offset 0xC

# setup initial state
code 0012      # 0025: push #12
code 0023      # 0021: push #23
code 0034      # 0022: push #34
code 0045      # 0023: push #45
code 0056      # 0024: push #56
code 0067      # 0025: push #67
code 0078      # 0026: push #78
code 0089      # 0027: push #89
code 009A      # 0028: push #9A
code 00AB      # 0029: push #AB
code 2D80      # 002A: pop $0
code 00BC      # 002B: push #BC
code 2D81      # 002C: pop $1
code 00CD      # 002D: push #CD
code 2D82      # 002E: pop $2
code 00DE      # 002F: push #DE
code 2D83      # 0030: pop $3

#code under test
code A800      # 0: set $0, #0
           #m2:
code 950F      # 1: cmp $0, #8
code F017      # 2: rjump_f0 m1
code A840      # 3: set $1, #0
           #m3:
code 951F      # 4: cmp $1, #8
code F011      # 5: rjump_f0 m4
# print $0
code 2D00      # 6: push $0
code BF74      # 7: 0038: read_spi 0
code 297E      # 8: drop
# print $1
code 2D01      # 9: push $1
code BF74      # A: read_spi 0
code 297E      # B: drop
#test
code 2D00      # 6: push $0
code 2B22      # 7: tested code
# print stack top
code BF74      # 8: read_spi 0
code 297E      # 9: drop

# CCCC marker - "line feed"
code 01FF 65DA # C: push 5E5A // (5E5A+C)*2+1000 = FFFE
code B000      # E: read_spi 0
code 297E      # F: drop

code 2EC1      # 10: inc $1
code 297E      # 11: drop
code E7EE      # 12: jump m3
          # m4:
code 2EC0      # 13: inc $0
code 297E      # 14: drop
code E7E8      # 15: jump m2
          # m1:  16:

#dump stack
# AAAA marker
code 01FF 54C9 # 0036: push #4D49 // (4D49+C)*2+1000 = AAAA
code B000      # 0038: read_spi 0
code 297E      # 0044: drop
# locals dump
code 2D00      # 0039: push $0
code BF74      # 0038: read_spi 0
code 297E      # 003B: drop
code 2D01      # 003C: push $1
code BF74      # 0038: read_spi 0
code 297E      # 003E: drop
code 2D02      # 003F: push $2
code BF74      # 0038: read_spi 0
code 297E      # 0041: drop
code 2D03      # 0042: push $3
code BF74      # 0038: read_spi 0
code 297E      # 0044: drop
# FFFE marker
code 01FF 7F73 # 0045: push 77F3 // (77F3+C)*2+1000 = FFFE
code B000      # 0047: read_spi 0
code 297E      # 0048: drop
# stack dump
code BF74      # 0038: read_spi 0
code 297E      # 0044: drop
code BF74      # 0038: read_spi 0
code 297E      # 0044: drop
code BF74      # 0038: read_spi 0
code 297E      # 0044: drop
#code B000      # 004F: read_spi 0
#code 297E      # 0044: drop
#code B000      # 0051: read_spi 0
#code 297E      # 0044: drop
#code B000      # 0053: read_spi 0
#code 297E      # 0044: drop
#code B000      # 0055: read_spi 0
#code 297E      # 0044: drop
#code B000      # 0057: read_spi 0
#code 297E      # 0044: drop
#code B000      # 0059: read_spi 0
#code 297E      # 0044: drop
#code B000      # 005B: read_spi 0
#code 297E      # 0044: drop
#code B000      # 005D: read_spi 0
#code 297E      # 0044: drop
# CCCC marker
code 01FF 65DA # 005F: push 5E5A // (5E5A+C)*2+1000 = FFFE
code B000      # 0060: read_spi 0
code 297E      # 0061: drop
# dead loop
code 0000      # 0062: push #0
code 2440      # 0063: pop @40
code E7FE      # 0064: jump .-2

