cx_offset 0xC

# setup initial state
code 0012      # 0025: push #12
code 0023      # 0021: push #23
code 0034      # 0022: push #34
code 0045      # 0023: push #45
code 0056      # 0024: push #56
code 0067      # 0025: push #67
code 0078      # 0026: push #78
code 0089      # 0027: push #89
code 009A      # 0028: push #9A
code 00AA      # 0029: push #AA
code 2D80      # 002A: pop $0
code 00BB      # 002B: push #BB
code 2D81      # 002C: pop $1
code 00CC      # 002D: push #CC
code 2D82      # 002E: pop $2
code 00DD      # 002F: push #DD
code 2D83      # 0030: pop $3

##########################################
#code under test
code 0011
code BF74      # D: read_spi 0
code 297E      # E: drop
code 0011      # push #0048
code 0013      # push #0048
code 296E      # CUT
#print result
code BF74      # D: read_spi 0
code 297E      # E: drop
# CCCC marker
code 01FF 65DA # 005F: push 5E5A // (5E5A+C)*2+1000 = FFFE
code B000      # 0060: read_spi 0
code 297E      # 0061: drop
##########################################
#code under test
code 0012
code BF74      # D: read_spi 0
code 297E      # E: drop
code 0012      # push #0048
code 0013      # push #0048
code 296E      # CUT
#print result
code BF74      # D: read_spi 0
code 297E      # E: drop
# CCCC marker
code 01FF 65DA # 005F: push 5E5A // (5E5A+C)*2+1000 = FFFE
code B000      # 0060: read_spi 0
code 297E      # 0061: drop
##########################################
#code under test
code 0013
code BF74      # D: read_spi 0
code 297E      # E: drop
code 0013      # push #0048
code 0013      # push #0048
code 296E      # CUT
#print result
code BF74      # D: read_spi 0
code 297E      # E: drop
# CCCC marker
code 01FF 65DA # 005F: push 5E5A // (5E5A+C)*2+1000 = FFFE
code B000      # 0060: read_spi 0
code 297E      # 0061: drop
##########################################
#code under test
code 0014
code BF74      # D: read_spi 0
code 297E      # E: drop
code 0014      # push #0048
code 0013      # push #0048
code 296E      # CUT
#print result
code BF74      # D: read_spi 0
code 297E      # E: drop
# CCCC marker
code 01FF 65DA # 005F: push 5E5A // (5E5A+C)*2+1000 = FFFE
code B000      # 0060: read_spi 0
code 297E      # 0061: drop
##########################################
#code under test
code 0015
code BF74      # D: read_spi 0
code 297E      # E: drop
code 0015      # push #0048
code 0013      # push #0048
code 296E      # CUT
#print result
code BF74      # D: read_spi 0
code 297E      # E: drop
# CCCC marker
code 01FF 65DA # 005F: push 5E5A // (5E5A+C)*2+1000 = FFFE
code B000      # 0060: read_spi 0
code 297E      # 0061: drop
##########################################

#dump stack
# AAAA marker
code 01FF 54C9 # 0036: push #4D49 // (4D49+C)*2+1000 = AAAA
code B000      # 0038: read_spi 0
code 297E      # 0044: drop
# locals dump
code 2D00      # 0039: push $0
code BF74      # 0038: read_spi 0
code 297E      # 003B: drop
code 2D01      # 003C: push $1
code BF74      # 0038: read_spi 0
code 297E      # 003E: drop
code 2D02      # 003F: push $2
code BF74      # 0038: read_spi 0
code 297E      # 0041: drop
code 2D03      # 0042: push $3
code BF74      # 0038: read_spi 0
code 297E      # 0044: drop
# FFFE marker
code 01FF 7F73 # 0045: push 77F3 // (77F3+C)*2+1000 = FFFE
code B000      # 0047: read_spi 0
code 297E      # 0048: drop
# stack dump
code BF74      # 0038: read_spi 0
code 297E      # 0044: drop
code BF74      # 0038: read_spi 0
code 297E      # 0044: drop
code BF74      # 0038: read_spi 0
code 297E      # 0044: drop
#code B000      # 004F: read_spi 0
#code 297E      # 0044: drop
#code B000      # 0051: read_spi 0
#code 297E      # 0044: drop
#code B000      # 0053: read_spi 0
#code 297E      # 0044: drop
#code B000      # 0055: read_spi 0
#code 297E      # 0044: drop
#code B000      # 0057: read_spi 0
#code 297E      # 0044: drop
#code B000      # 0059: read_spi 0
#code 297E      # 0044: drop
#code B000      # 005B: read_spi 0
#code 297E      # 0044: drop
#code B000      # 005D: read_spi 0
#code 297E      # 0044: drop
# CCCC marker
code 01FF 65DA # 005F: push 5E5A // (5E5A+C)*2+1000 = FFFE
code B000      # 0060: read_spi 0
code 297E      # 0061: drop
# dead loop
code 0000      # 0062: push #0
code 2440      # 0063: pop @40
code E7FE      # 0064: jump .-2

