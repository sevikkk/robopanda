index 0x1000
cx_offset 0xC
audio 1 dump_cartridge_black/00669.aud
audio 2 dump_cartridge_black/00757.aud
audio 3 dump_cartridge_black/00837.aud
audio 4 dump_cartridge_black/00791.aud
audio 5 dump_cartridge_black/00792.aud

# setup initial state
code 0004      # 0025: push #12
code 291A      # 0025: push #12
code 0001      # 0025: push #12
code 2928      # 0025: push #12
code 2923      # 0025: push #12
code 0002      # 0025: push #12
code 2928      # 0025: push #12
code 2923      # 0025: push #12
code 0003      # 0025: push #12
code 2928      # 0025: push #12
code 2923      # 0025: push #12
code 0004      # 0025: push #12
code 2928      # 0025: push #12
code 2923      # 0025: push #12
code 0005      # 0025: push #12
code 2928      # 0025: push #12
code 2923      # 0025: push #12
code 0000      # 0062: push #0
code 297E      # 0063: pop @40
code E7FE      # 0064: jump .-2

code 0012      # 0025: push #12
code 0023      # 0021: push #23
code 0034      # 0022: push #34
code 0045      # 0023: push #45
code 0056      # 0024: push #56
code 0067      # 0025: push #67
code 0078      # 0026: push #78
code 0089      # 0027: push #89
code 009A      # 0028: push #9A
code 00AB      # 0029: push #AB
code 2D80      # 002A: pop $0
code 00BC      # 002B: push #BC
code 2D81      # 002C: pop $1
code 00CD      # 002D: push #CD
code 2D82      # 002E: pop $2
code 00DE      # 002F: push #DE
code 2D83      # 0030: pop $3

#code under test
#code AFC9 0004 2D04 B000 2440 2D1F B000 2440
code 2EC0      # 0031: unknown 2902
code B000      # 0038: read_spi 0
code 297E
code 2EC0      # 0031: unknown 2902
code B000      # 0038: read_spi 0
code 297E

#dump stack
# AAAA marker
code 01FF 4D49 # 0036: push #4D49 // (4D49+C)*2+1000 = AAAA
code B000      # 0038: read_spi 0
# locals dump
code 2D00      # 0039: push $0
code B000      # 003A: read_spi 0
code 2440      # 003B: pop @40
code 2D01      # 003C: push $1
code B000      # 003D: read_spi 0
code 2440      # 003E: pop @40
code 2D02      # 003F: push $2
code B000      # 0040: read_spi 0
code 2440      # 0041: pop @40
code 2D03      # 0042: push $3
code B000      # 0043: read_spi 0
code 2440      # 0044: pop @40
# FFFE marker
code 01FF 77F3 # 0045: push 77F3 // (77F3+C)*2+1000 = FFFE
code B000      # 0047: read_spi 0
code 2440      # 0048: pop @40
# stack dump
code B000      # 0049: read_spi 0
code 2440      # 004A: pop @40
code B000      # 004B: read_spi 0
code 2440      # 004C: pop @40
code B000      # 004D: read_spi 0
code 2440      # 004E: pop @40
code B000      # 004F: read_spi 0
code 2440      # 0050: pop @40
code B000      # 0051: read_spi 0
code 2440      # 0052: pop @40
code B000      # 0053: read_spi 0
code 2440      # 0054: pop @40
code B000      # 0055: read_spi 0
code 2440      # 0056: pop @40
code B000      # 0057: read_spi 0
code 2440      # 0058: pop @40
code B000      # 0059: read_spi 0
code 2440      # 005A: pop @40
code B000      # 005B: read_spi 0
code 2440      # 005C: pop @40
code B000      # 005D: read_spi 0
code 2440      # 005E: pop @40
# CCCC marker
code 01FF 5E5A # 005F: push 5E5A // (5E5A+C)*2+1000 = FFFE
code B000      # 0060: read_spi 0
code 2440      # 0061: pop @40
# dead loop
code 0000      # 0062: push #0
code 2440      # 0063: pop @40
code E7FE      # 0064: jump .-2

mover 6107 7107 08AA 18AA 407A 507A F002 F004 F000
