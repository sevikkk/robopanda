index 0x1000
cx_offset 0xC
#audio 1 a.aud
audio 1 dump_cartridge_black/00026.aud
audio 2 dump_cartridge_black/00017.aud

# mover presets from cartridge, does not work for legs...
#code 01FF 0043   #  0  push #0011
#code 2410        #     pop  @10
#code 01FF 0099   #  1  push #C051
#code 2411        #     pop  @11
#code 01FF 005B   #  2  push #0102
#code 2412        #     pop  @12
#code 01FF 00A6   #  3  push #0B00
#code 2413        #     pop  @13
#code 01FF 0034   #  4  push #..
#code 2414        #     pop  @14
#code 01FF 00C4   #  5  push #..
#code 2415        #     pop  @15
#code 01FF 002E   #  6  push #..
#code 2416        #     pop  @16
#code 01FF 00BC   #  7  push #..
#code 2417        #     pop  @17
#code 01FF 0075   #  8  push #..
#code 2418        #     pop  @18
#code 01FF 00A3   #  9  push #..
#code 2419        #     pop  @19
#code 01FF 0075   # 10  push #..
#code 241A        #     pop  @1A
#code 01FF 00A3   # 11  push #..
#code 241B        #     pop  @1B
#code 01FF 0060   # 12  push #..
#code 241C        #     pop  @1C
#code 01FF 0088   # 13  push #..
#code 241D        #     pop  @1D
#code 01FF 0060   # 14  push #..
#code 241E        #     pop  @1E
#code 01FF 0098   # 15  push #..
#code 241F        #     pop  @1F
#code 01FF 0000   # 16  push #..
#code 2420        #     pop  @20
#code 01FF 0000   # 17  push #..
#code 2421        #     pop  @21
#code 01FF 0000   # 18  push #..
#code 2422        #     pop  @22
#code 01FF 0000   # 19  push #..
#code 2423        #     pop  @23

# ======== mover initialization from nvram presets ===========
# load data from nvram 00..15 to globals @10..25 (procedure at 05E7 in black carttridge, chunk from 05F5)
code A800   #              set       $00, #00             // set local 00 to 00
            #       L20_15:                                // xrefs: 05FC
code 2D00   #              push      $00                  // push local 00 to stack
code 0E16   #              cmp       #16                  // pop value from stack and compare with arg
code F009   #              rjump_f0  L20_18               // conditional jump to 0602
code E003   #              rjump     L20_17               // jump to 05FD
            #       L20_16:                                // xrefs: 0601
code 2EC0   #              inc       $00                  // increment local 00 and push old value to stack
code 297E   #              drop                           // pop and drop value from stack
code E7FA   #              rjump     L20_15               // jump to 05F6
            #       L20_17:                                // xrefs: 05F9
code 2D00   #              push      $00                  // push local 00 to stack
code 292A   #              nvram_read                      // pop nvram addres from stack, read and put result on stack
code 2D00   #              push      $00                  // push local 00 to stack
code 2510   #              pop       @0010+               // pop offset from stack, pop global 00E7+offset from stack
code E7F9   #              rjump     L20_16               // jump to 05FA
            #       L20_18:                                // xrefs: 05F8

# init mover from @10
code 0010        #     push #10
code 2935        #     init_mover

# set volume to 8
code 0008      #  push #08
code 291A      #  volume

# play audio 1 ("Yes")
code 0001      #  push #01
code 2928      #  play
code 2923      #  play_wait

#move
code 0001        #     push #1
code 292F        #     move

# play audio 2 ("Most likely")
code 0002      #  push #02
code 2928      #  play
code 2923      #  play_wait

#dead loop
code 0000      #  push #0
code 297E      #  drop
code E7FE      #  jump .-2

#mover 00EA F002 F004 01EA F002 F004 016A F002 F004 F000 # левое плечо вверх-вниз
#mover 10EA F002 F004 11EA F002 F004 116A F002 F004 F000 # правое плечо вверх-вниз
#mover 20EA F002 F004 21EA F002 F004 216A F002 F004 F000 # левая задняя лапа
#mover 70CA F002 F004 714A F002 F004 790A F002 F004 F000 # голова лево-право
mover 610a 710a 08aa 18aa 287a 387a f002 f004 f005 000a 407a 507a f005 00b4 f00a # proper sitting initial state
